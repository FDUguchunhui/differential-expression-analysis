color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
##pattern 2 TFT
p2_TFT.table <- read.xlsx2(file = 'bubbleplot data.xlsx',
sheetName = 'p2_TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
p2_TFT.table$FDR.q.value = -log10(as.numeric(p2_TFT.table$FDR.q.value))
p2_TFT.table$Gene.Set.Name <- factor(p2_TFT.table$Gene.Set.Name,
levels = p2_TFT.table$Gene.Set.Name[order(p2_TFT.table$FDR.q.value)])
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
####pattern 2 combination
p2_combination.table <- read.xlsx2(file = 'enrichment share up-regulated genes\\bubbleplot data.xlsx',
sheetName = 'p2_combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
p2_combination.table$FDR.q.value = -log10(as.numeric(p2_combination.table$FDR.q.value))
p2_combination.table$Gene.Set.Name <- factor(p2_combination.table$Gene.Set.Name,
levels = p2_combination.table$Gene.Set.Name[order(p2_combination.table$FDR.q.value)])
ggplot(data = p2_combination.table) +
geom_point(aes(x = p2_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 Combination', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
##pattern 2 TFT
p2_TFT.table <- read.xlsx2(file = 'enrichment share up-regulated genes\\bubbleplot data.xlsx',
sheetName = 'p2_TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
p2_TFT.table$FDR.q.value = -log10(as.numeric(p2_TFT.table$FDR.q.value))
p2_TFT.table$Gene.Set.Name <- factor(p2_TFT.table$Gene.Set.Name,
levels = p2_TFT.table$Gene.Set.Name[order(p2_TFT.table$FDR.q.value)])
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
##pattern 2 TFT
p2_TFT.table <- read.xlsx2(file = 'enrichment share up-regulated genes\\bubbleplot data.xlsx',
sheetName = 'p2_TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
View(p2_TFT.table)
View(p2_TFT.table)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
p2_TFT.table <- read.xlsx2(file = 'bubbleplot data.xlsx',
sheetName = 'p2_TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
p2_TFT.table$FDR.q.value = -log10(as.numeric(p2_TFT.table$FDR.q.value))
p2_TFT.table$Gene.Set.Name <- factor(p2_TFT.table$Gene.Set.Name,
levels = p2_TFT.table$Gene.Set.Name[order(p2_TFT.table$FDR.q.value)])
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 FDR q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap (k)', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 2),
fill = guide_legend(order = 1)
)
ggplot(data = p2_TFT.table) +
geom_point(aes(x =  p2_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination$FDR.q.value = -log10(as.numeric(five_points_combination$FDR.q.value))
five_points_combination$Gene.Set.Name <- factor(five_points_combination$Gene.Set.Name,
levels = five_points_combination$Gene.Set.Name[order(five_points_combination$FDR.q.value)])
ggplot(data = five_points_combination) +
geom_point(aes(x =  five_points_combination$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
####pattern 2 combination
p2_combination.table <- read.xlsx2(file = 'enrichment share up-regulated genes\\bubbleplot data.xlsx',
sheetName = 'p2_combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
##pattern 2 TFT
p2_TFT.table <- read.xlsx2(file = 'enrichment share up-regulated genes\\bubbleplot data.xlsx',
sheetName = 'p2_TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points .xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination$FDR.q.value = -log10(as.numeric(five_points_combination$FDR.q.value))
five_points_combination$Gene.Set.Name <- factor(five_points_combination$Gene.Set.Name,
levels = five_points_combination$Gene.Set.Name[order(five_points_combination$FDR.q.value)])
ggplot(data = five_points_combination) +
geom_point(aes(x =  five_points_combination$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
five_points_combination$FDR.q.value = -log10(as.numeric(five_points_combination$FDR.q.value))
# 5-points combination
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
# 5-points combination
five_points_combination.table.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table$FDR.q.value = -log10(as.numeric(five_points_combination.table$FDR.q.value))
five_points_combination.table$Gene.Set.Name <- factor(five_points_combination.table$Gene.Set.Name,
levels = five_points_combination.table$Gene.Set.Name[order(five_points_combination.table$FDR.q.value)])
ggplot(data = five_points_combination.table) +
geom_point(aes(x =  five_points_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'pattern 2 TFT', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points combination
five_points_combination.table.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
ggplot(data = five_points_combination.table) +
geom_point(aes(x =  five_points_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points TFT
five_points_combination.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table$FDR.q.value = -log10(as.numeric(five_points_combination.table$FDR.q.value))
five_points_combination.table$Gene.Set.Name <- factor(five_points_combination.table$Gene.Set.Name,
levels = five_points_combination.table$Gene.Set.Name[order(five_points_combination.table$FDR.q.value)])
ggplot(data = five_points_combination.table) +
geom_point(aes(x =  five_points_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points TFT
five_points_TFT.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_TFT.table$FDR.q.value = -log10(as.numeric(five_points_TFT.table$FDR.q.value))
five_points_TFT.table$Gene.Set.Name <- factor(five_points_TFT.table$Gene.Set.Name,
levels = five_points_TFT.table$Gene.Set.Name[order(five_points_TFT.table$FDR.q.value)])
ggplot(data = five_points_TFT.table) +
geom_point(aes(x =  five_points_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'TFT', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points combination
five_points_combination.table.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table$FDR.q.value = -log10(as.numeric(five_points_combination.table$FDR.q.value))
five_points_combination.table$Gene.Set.Name <- factor(five_points_combination.table$Gene.Set.Name,
levels = five_points_combination.table$Gene.Set.Name[order(five_points_combination.table$FDR.q.value)])
ggplot(data = five_points_combination.table) +
geom_point(aes(x =  five_points_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
five_points_combination.table.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table$FDR.q.value = -log10(as.numeric(five_points_combination.table$FDR.q.value))
five_points_combination.table$Gene.Set.Name <- factor(five_points_combination.table$Gene.Set.Name,
levels = five_points_combination.table$Gene.Set.Name[order(five_points_combination.table$FDR.q.value)])
ggplot(data = five_points_combination.table) +
geom_point(aes(x =  five_points_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points combination
five_points_combination.table.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'Combination',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_combination.table$FDR.q.value = -log10(as.numeric(five_points_combination.table$FDR.q.value))
five_points_combination.table$Gene.Set.Name <- factor(five_points_combination.table$Gene.Set.Name,
levels = five_points_combination.table$Gene.Set.Name[order(five_points_combination.table$FDR.q.value)])
ggplot(data = five_points_combination.table) +
geom_point(aes(x =  five_points_combination.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
five_points_TFT.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_TFT.table$FDR.q.value = -log10(as.numeric(five_points_TFT.table$FDR.q.value))
five_points_TFT.table$Gene.Set.Name <- factor(five_points_TFT.table$Gene.Set.Name,
levels = five_points_TFT.table$Gene.Set.Name[order(five_points_TFT.table$FDR.q.value)])
ggplot(data = five_points_TFT.table) +
geom_point(aes(x =  five_points_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points TFT
five_points_TFT.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_TFT.table$FDR.q.value = -log10(as.numeric(five_points_TFT.table$FDR.q.value))
five_points_TFT.table$Gene.Set.Name <- factor(five_points_TFT.table$Gene.Set.Name,
levels = five_points_TFT.table$Gene.Set.Name[order(five_points_TFT.table$FDR.q.value)])
ggplot(data = five_points_TFT.table) +
geom_point(aes(x =  five_points_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
# 5-points TFT
five_points_TFT.table <- read.xlsx2(file = 'enrichment intersection 5 time points genes\\bubbleplot five points.xlsx',
sheetName = 'TFT',
colClasses = c('character','numeric','character', rep('numeric', 4))
)
five_points_TFT.table$FDR.q.value = -log10(as.numeric(five_points_TFT.table$FDR.q.value))
five_points_TFT.table$Gene.Set.Name <- factor(five_points_TFT.table$Gene.Set.Name,
levels = five_points_TFT.table$Gene.Set.Name[order(five_points_TFT.table$FDR.q.value)])
ggplot(data = five_points_TFT.table) +
geom_point(aes(x =  five_points_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'Combination', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
levels = five_points_TFT.table$Gene.Set.Name[order(five_points_TFT.table$FDR.q.value)])
ggplot(data = five_points_TFT.table) +
geom_point(aes(x =  five_points_TFT.table$Gene.Set.Name, y='', size =  X..Genes.in.Overlap..k., color = FDR.q.value)) +
coord_flip() +
labs(title = 'TFT', size = '# of Genes in Overlap', color = '-log10 q value') +
ylab('') +
xlab('Genes') +
scale_colour_gradient(low = "lightsteelblue1", high = "blue4") +
guides(
color = guide_colorbar(order = 0),
fill = guide_legend(order = 1)
)
save.image()
savehistory()
